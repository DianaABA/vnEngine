name: Release (GitHub Packages)

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build publishable packages
        run: npm run build:packages

      - name: Pack packages
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ./packed
          # List of publishable workspaces to consider
          packages=("packages/core" "packages/renderer-web" "packages/renderer-native" "packages/storage" "packages/storage-native")
          for pkg in "${packages[@]}"; do
            if [ -f "$pkg/package.json" ]; then
              name=$(node -p "require('./${pkg}/package.json').name")
              echo "Packing $name from $pkg"
              (cd "$pkg" && npm pack --silent)
              mv "$pkg"/*.tgz ./packed/
            fi
          done

      - name: Publish to GitHub Packages (conditional)
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          npm config set //npm.pkg.github.com/:_authToken "$GITHUB_TOKEN"
          npm config set registry https://npm.pkg.github.com/
          packages=("packages/core" "packages/renderer-web" "packages/renderer-native" "packages/storage" "packages/storage-native")
          for pkg in "${packages[@]}"; do
            if [ -f "$pkg/package.json" ]; then
              name=$(node -p "require('./${pkg}/package.json').name")
              if [[ "$name" == @${GITHUB_REPOSITORY_OWNER}/* ]]; then
                echo "Publishing $name to GitHub Packages"
                (cd "$pkg" && npm publish --access public --registry https://npm.pkg.github.com/)
              else
                echo "Skipping publish for $name (scope does not match owner '${GITHUB_REPOSITORY_OWNER}')"
              fi
            fi
          done

      - name: Create GitHub Release and upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            packed/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
